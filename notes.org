#+TITLE: Notes
#+AUTHOR: Alexis Roda
#+EMAIL: alexis.roda.villalonga@gmail.com

#+TODO: TODO DONE(@)
#+TODO: | CANC(c@)


* Bugs, molèsties, millores etc.

# Aquesta secció és el target d'una plantilla de captura. Si es canvia
# el text del títol caldrà ajustar la plantilla.

** TODO error amb la comanda =m= en buffers /info/                      :bug:

En buffers /info/ la comanda =m= (=Info-menu=) normalment congela
/emacs/ al cap d'uns segons de mostrar la llista de candidats. =C-g=
recupera el control.

Mirar si té a veure en algun del paquets =ido=.

Havia una mena d'error al inicialitzar =INFOPATH=, el directori
personal anava al final amb el que era ignorat. No veig com açò podria
confondre a /info/ però després de canviar-ho sembla estable.

Fent proves amb el valor de =INFOPATH= soc incapaç de reproduir el
comportament problemàtic. Alguna cosa ha canviat que ha resolt el
problema.

** TODO moure funcionalitat                                     :enhancement:

Algunes configuracions activen funcionalitats o fan canvis /globals/
que no els corresponen.

Si realment són globals mirar de moure-les al /hook/ d'un mode tipus
=fundamental-mode=.

- [ ] [[file:settings.org::*=abbrev=][=abbrev=]]: activa el mode globalment
- [ ] [[file:settings.org::*=dired=][=dired=]]: modifica el /keymap/ local
- [ ] [[file:settings.org::*=electric-pair=][=electric-pair=]]: activa el mode globalment
- [ ] [[file:settings.org::*=engine-mode=][=engine-mode=]]: activa el mode globalment
- [ ] [[file:settings.org::*=font-lock=][=font-lock=]]: activa el mode globalment
- [ ] [[file:settings.org::*=hl-line=][=hl-line=]]: activa el mode globalment
- [ ] [[file:settings.org::*=ido=][=ido=]]: ídem.
- [ ] [[file:settings.org::*=modeline=][=modeline=]]: ací no tinc clar si cal un apartat dins /paquets/ o
  és millor moure-ho a /interfície d'usuari/.
- [ ] [[file:settings.org::*=mwheel=][=mwheel=]]: si realment =mouse-wheel-mode= s'activa en alguna
  altra part eliminar l'activació, sinó activar el mode globalment.
- [ ] [[file:settings.org::*=projectile=][=projectile=]]: no recordo el funcionament de projectile, imagino
  que s'activa globalment, no per buffer. Probablament moure a un
  /hook/ o altre.
- [ ] [[file:settings.org::*=subword=, =superword=][=subword=, =superword=]]: es limita a definir dos comandes.
  Moure-les a la secció corresponent?
- [ ] [[file:settings.org::*=swiper=][=swiper=]]: defineix una comanda. Moure-la?
- [ ] [[file:settings.org::*=which-key=][=which-key=]]: moure activació
- [ ] [[file:settings.org::*=yasnippet=][=yasnippet=]]: moure activació
- [ ] [[file:settings.org::*=emmet= (anteriorment =zencoding=)][=emmet=]]: (des)defineix una tecla del mapa local. Està en el
  límit.
- [ ] [[file:settings.org::*=company-tern=][=company-tern=]]: no hauria de modificar =company-backends=
- [ ] [[file:settings.org::*=js2-mode=][=js2-mode=]]: ídem amb =auto-mode-alist=
- [ ] [[file:settings.org::*=elpy=][=elpy=]]: modifica el /keymap/ local
- [ ] [[file:settings.org::*=pytest=][=pytest=]]: ídem
- [ ] [[file:settings.org::*=python=][=python=]]: activa =elpy=. Crec recordar que és una inicialitació
  del paquet (global) no del buffer (local). No tinc clar on moure-ho.
  També modifica =comint-output-filter-functions=. Potser es podrien
  moure a una nova secció /Configuració/.

** TODO revisar compilació de la configuració                          :task:

#+begin_src text :tangle no
  Compiling file /home/aroda/.emacs.d/conf.d/settings.el at Thu Mar 29 19:35:20 2018
  settings.el:147:9:Warning: assignment to free variable
      ‘buffer-menu-buffer-font-lock-keywords’

  In buffer-menu-custom-font-lock:
  settings.el:164:32:Warning: ‘font-lock-fontify-buffer’ is for interactive use
      only; use ‘font-lock-ensure’ or ‘font-lock-flush’ instead.
  settings.el:246:9:Warning: assignment to free variable
      ‘ediff-split-window-function’
  settings.el:247:9:Warning: assignment to free variable
      ‘ediff-window-setup-function’
  settings.el:268:73:Warning: reference to free variable ‘latin-1’

  In arv/wm-cycle:
  settings.el:472:5:Warning: reference to free variable ‘subword-mode’
  settings.el:475:5:Warning: reference to free variable ‘superword-mode’

  In arv/wm-cycle-2:
  settings.el:487:5:Warning: reference to free variable ‘subword-mode’

  In arv/scratch:
  settings.el:588:28:Warning: reference to free variable ‘lisp-mode’
  settings.el:886:9:Warning: ‘python-shell-virtualenv-path’ is an obsolete
      variable (as of 25.1); use ‘python-shell-virtualenv-root’ instead.

  In arv/-sphinx-locate-makefile:
  settings.el:1063:8:Warning: ‘(string=)’ is a malformed function
  settings.el:1063:8:Warning: ‘(string=)’ is a malformed function

  In arv/sphinx-build-html:
  settings.el:1093:17:Warning: reference to free variable ‘phinx-build’
  settings.el:1102:4:Warning: reference to free variable ‘rst-mode-map’
  settings.el:1173:7:Warning: ‘display-buffer-reuse-frames’ is an obsolete
      variable (as of 24.3); use a ‘reusable-frames’ alist entry in
      ‘display-buffer-alist’.

  In arv/upcase-word:
  settings.el:1197:16:Warning: looking-back called with 1 argument, but requires
      2-3

  In arv/downcase-word:
  settings.el:1205:16:Warning: looking-back called with 1 argument, but requires
      2-3

  In arv/duplicate-line-or-region-dwim:
  settings.el:1237:13:Warning: assignment to free variable ‘beg’
  settings.el:1253:22:Warning: reference to free variable ‘beg’

  In end of data:
  settings.el:1820:1:Warning: the function ‘sql-highlight-postgres-keywords’
      might not be defined at runtime.
  settings.el:1820:1:Warning: the function ‘arv/-’ is not known to be defined.
#+end_src

** TODO analitzar arranc                                               :task:

Al activar el mode verbós he identificat aquests dos com els més
lents. La resta estan per baix de 0.1 segons.

#+begin_src text :tangle no
  Loading package js2-refactor...done (0.697s)
  Configuring package yasnippet...done (0.190s)
#+end_src

Mirar que és carrega durant l'arranc per veure si alguna cosa sobra
etc.

** TODO abreviatures en =abbrev=                                       :idea:

Actualment les abreviatures es guarden en un arxiu. Per la forma en
que les utilitzo (molt poc) probablement sigui preferible definir-les
directament en la configuració.

** TODO normalitzar rutes de fitxers                            :enhancement:

En alguns llocs utilitzo rutes calculades dinàmicament i en d'altres
literals. Problemes:

- dificulta moure la configuració a un altre directori. Probablement
  no té importància ja que únicament limita el directori utilitzat
  dins =~/.emacs.d= i =conf.d= sembla perfectament vàlid.

- més important és que al fixar els separadors en la ruta no
  funcionarà en windows. Tampoc és que utilitzi molt emacs en windows
  ni que necessiti un entorn completament configurat, però estaria bé.

Pot ser tot dinàmic?

Definir /helpers/ per simplificar i /dotar de significat/ a les rutes,
per exemple:

#+begin_src emacs-lisp :tangle no
  (defun arv/path-emacs-conf (&rest components)
    (apply arv/path-concat (cons arv/emacs-conf dir components)))
#+end_src

El lloc on és més dificil (incòmode) utilitzar rutes calculades és en
la clausula =:load-path= de =use-package=. Hi ha algunes limitacions,
[[https://github.com/jwiegley/use-package#extending-the-load-path][revisar la documentació]].

[[http://howardism.org/Technical/Emacs/literate-devops.html][Ací]] hi ha un exemple interessant: defineix una variable a nivell de
document /org/ que després s'utilitza en un bloc de codi. Em queda el
dubte si es pot generalitzar o està limitat a blocs /sh/. La idea
seria definir variables per =conf.d= i =emacs.d= i escriure
=:load-path "$CONFD/foobar". Falta per resoldre el tema del separador.

Pensant-ho millor, no sé si açò funcionaria (suposant que sigui
possible). L'execució depèn d'elements definits en el document i no
tinc clar si /tangle/ serà prou intel·ligent per detectar-ho. Executar
el bloc de codi en el context del document sembla bastant diferent.

** TODO Revisar configuració backends de company                :enhancement:
   :PROPERTIES:
   :PUB_DATE: [2018-03-30 dv 00:28]
   :REFERER: [[file:settings.org::*=company=][=company=]]
   :END:

Revisar si ha hagut cap canvi en la configuració dels /backends/. No
m'agrada activar-los globalment, seria millor activar els rellevants
per cada mode en el corresponent /hook/.

** TODO Revisar estructura                                             :idea:
   :PROPERTIES:
   :PUB_DATE: [2018-03-30 dv 03:37]
   :REFERER: [[file:settings.org::*=xref-js2=][=xref-js2=]]
   :END:

No tinc clar si és bona idea tindre paquets en dos seccions separades
(/paquets/ i /modes/).

** TODO integrar un REPL javascript                             :enhancement:
   :PROPERTIES:
   :PUB_DATE: [2018-03-31 ds 01:34]
   :REFERER: [[file:~/.emacs.d/conf.d/settings.org::*javascript][javascript]]
   :END:

Integrar un interpret (nodejs?) en la configuració.

- https://github.com/abicky/nodejs-repl.el, disponible a melpa stable.

- [[https://github.com/abicky/nodejs-repl.el][aquest article]], encara que vell, sembla interessant.

- [[https://github.com/NicolasPetton/Indium][Indium]] és un IDE per javascript. Té molt bona pinta.

** TODO Investigar /rope/                                              :task:
   :PROPERTIES:
   :PUB_DATE: [2018-03-31 ds 01:37]
   :REFERER: [[file:~/.emacs.d/conf.d/settings.org::*=python=][=python=]]
   :END:

Sembla que /rope/ te un nou mantenidor. Fer un seguiment:

https://github.com/python-rope/rope

** TODO Patró de cerca/revisió                                         :idea:
   :PROPERTIES:
   :PUB_DATE: [2018-03-31 ds 03:00]
   :REFERER: [[file:~/.emacs.d/conf.d/settings.org::*apropos][apropos]]
   :END:

Mirar si =occur= + =list-matching-lines-default-context-lines= podria
ser una alternativa a la forma (poc pràctica) en que utilitzo /swiper/
per buscar i revisar en el codi.

Es podria definir una nova comanda que demani el nombre de línies de
context.

Crec que no és necessari afegir context. És suficient amb seleccionar
automàticament el buffer =*occur*=. Una vegada en el buffer =*occur*=
les comandes =o= i =C-o= funcionen com és habitual i permeten veure el
context que es necessiti.

Depenent de l'ús principal de la comanda, el prefix =C-u= poc
activar/inhibir el canvi de buffer. En la comanda =occur= original el
significat de =C-u= no sembla gaire pràctic.

Crec que el que vull és algo tipus =swiper= (que al moure el cursor
mostri la linea seleccionada en el buffer) però que sigui persistent:
cerco, trobo, modifico, torno a la cerca.

** TODO revisar =diminish=                                      :enhancement:
   :PROPERTIES:
   :PUB_DATE: [2018-03-31 ds 22:13]
   :REFERER: [[file:~/.emacs.d/conf.d/notes.org::*comparar%20temps%20de%20c%C3%A0rrega][comparar temps de càrrega]]
   :END:

Fent proves a =wst= he vist que la modeline mostrava varis /lighters/
de modes menors. Activant =diminish= (=(require 'diminish)=) han
desaparegut.

Potser és moment de moure la configuració de =diminish= als
corresponents =use-package=.

** TODO gestionar paquets absents durant la instal·lació                :bug:
   :PROPERTIES:
   :PUB_DATE: [2018-04-01 dg 00:48]
   :REFERER: [[file:~/.emacs.d/conf.d/notes.org::*comparar%20temps%20de%20c%C3%A0rrega][comparar temps de càrrega]]
   :END:

Si falta cap paquet durant la instal·lació aquesta aborta. Amb /pypi/
mai m'ha passat però amb /ELPA/ sembla habitual (primer =rainbow-mode=
va desapareixer d'un dia per l'altre i ara =magit= depen d'un paquet
no disponible).

Mirar si és possible fer que continui la instal·lació i al final
informi, de manera visible, que certs paquets no s'han pogut
instal·lar.

** TODO descobrir paquets                                              :note:
   :PROPERTIES:
   :PUB_DATE: [2018-04-02 dl 13:01]
   :REFERER:
   :END:

Per no oblidar-ho:

- https://emacsmirror.net/: The Emacsmirror is a growing collection of
  Emacs Lisp packages. All mirrored packages are available as Git
  repositories.

- https://github.com/emacs-tw/awesome-emacs: Awesome Emacs, a
  community driven list of useful Emacs packages, utilities and
  libraries. Most of the following packages are available in MELPA. We
  recommend installing packages with it.

** TODO elimina blocs sh?                                              :idea:
   :PROPERTIES:
   :PUB_DATE: [2018-04-02 dl 18:09]
   :REFERER: [[file:~/.emacs.d/conf.d/settings.org::*Blocs%20de%20codi%20sh][Blocs de codi sh]]
   :END:

Si estic configurant emacs perquè collons utilitzo sh?!

El problema amb l'enfoc actual és que el codi emacs lisp s'executa en
cada arranc i pot incorporar nous paquets/elements mentre que el codi
sh només s'executa el primer arranc. Si s'afegeix un bloc sh cal
executar-lo manualment.

Una possibilitat seria [[https://github.com/quelpa/quelpa-use-package][=quelpa-use-package=]], que integra [[https://github.com/quelpa/quelpa][=quelpa=]] amb
=use-package=. Per exemple:

#+begin_src emacs-lisp :tangle no
  (use-package abc-mode
    :quelpa ((abc-mode :fetcher github
                       :repo "mkjunker/abc-mode")
             :upgrade t))
#+end_src

** TODO gestió del directori =site-lisp=                                :bug:
   :PROPERTIES:
   :PUB_DATE: [2018-04-02 dl 21:55]
   :REFERER: [[file:~/.emacs.d/conf.d/settings.org::*Directori%20=site-lisp=][Directori =site-lisp=]]
   :END:

Implementar scripts per automatitzar la gestió dels paquets en
=~/.emacs.d/site-lisp=:

- pull + compilar
- esborrar un paquet

** TODO eliminar confirmació al matar buffers                     :annoyance:
   :PROPERTIES:
   :PUB_DATE: [2018-04-03 dt 00:29]
   :REFERER: [[file:~/.emacs.d/conf.d/notes.org::*Bugs,%20mol%C3%A8sties,%20millores%20etc.][Bugs, molèsties, millores etc.]]
   :END:

En ibuffer, després de marcar varis buffers amb =d= l'execució (=x=)
demana confirmació. Mirar si es pot configurar per no demanar-la.

** TODO highlight-thing-at-point                                       :idea:
   :PROPERTIES:
   :PUB_DATE: [2018-04-03 dt 14:15]
   :REFERER: [[file:~/.bashrc::export%20INFOPATH="~/.local/share/info:$INFOPATH"]]
   :END:

Bastant habitualment vull comprovar que he escrit un nom de variable
correctament (especialment en scripts sh) i el que acabo fent és un
buscar.

He trobat la funció =highlight-symbol-at-point= (=M-s h .=) però en sh
sembla que no acaba de funcionar com vull. Investigar-ho.


* Completat

** DONE [#A] =S-M-up/down= no funciona en /org/                         :bug:
   - State "DONE"       from "TODO"       [2018-03-31 ds 13:29] \\
     Aparentment en org 8.2 =M-up= i =M-S-up= fan el mateix mentre que en
     9.1 no. Suposo que sempre he utilitzat la segona variant.

Al intentar moure un /heading/ dins un document /org/ no funciona. Amb
=emacs -q= funciona. Amb =emacs -q= activant /org/ 9.1.7 falla.

També falla al moure un ítem d'una llista, només mou la primera línia:

- foo
- bar bar bar bar bar bar bar bar bar bar bar bar bar bar bar bar bar
  bar bar bar bar bar bar bar bar bar bar bar bar bar bar
** CANC compilar configuració                                   :enhancement:
   :PROPERTIES:
   :PUB_DATE: [2018-03-31 ds 18:23]
   :REFERER: [[file:~/.emacs.d/conf.d/settings.org::*Per%20mirar][Per mirar]]
   :END:

   - State "CANC"       from "TODO"       [2018-03-31 ds 22:43] \\
     En les proves en relació a [[*comparar temps de c%C3%A0rrega][comparar temps de càrrega]] he observat que:

     - compilar durant l'arranc, quan no tots els paquets estan
       disponibles, és una font assegurada de problemes.

     - increiblement el temps d'arranc quan =settings.elc= està present és
       major. =emacs-init-time= retornava 0.9 i 1.0 respectivament.

     Fins que no tinga més clar com funciona tot açò del /byte-compiling/
     me'n oblido del tema.
[[help:org-babel-load-file][
=org-babel-load-file=]] permet compilar l'arxiu generat abans de
carregar-lo.
** DONE [#C] comparar temps de càrrega                                 :task:

   - State "DONE"       from "TODO"       [2018-04-01 dg 00:55] \\
     emacs original 2.3s, use-package 0.9s

Instal·lar la configuració en /wst/ i comparar el temps d'arranc.

Aprofitant que es fa un desplegament des de zero, completar la
documentació de la instal·lació.

- requereix cap estructura de directoris prèvia? es pot crear?

- com canviar/especificar el directori d'instal·lació? Es podria
  utilitzar el pare del propi arxiu de configuració.

- documentar dependències (git, make ...)

- com es genera l'arxiu =settings.sh=? Només es regenera
  =settings.org=. Mirar si es pot generar l'altre automàticament, sinó
  explicar =C-c C-v t= (=org-babel-tangle=).
** DONE =rainbow-mode=                                                  :bug:
   :PROPERTIES:
   :PUB_DATE: [2018-04-01 dg 00:49]
   :REFERER: [[file:~/.emacs.d/conf.d/notes.org::*comparar%20temps%20de%20c%C3%A0rrega][comparar temps de càrrega]]
   :END:

   - State "DONE"       from "TODO"       [2018-04-01 dg 02:43] \\
     r799: no es fixa el repositori globalment.

=rainbow-mode= ha desaparegut de repent, cap versió. Aparentment està
a ELPA (a la web apareix) però no apareix en =package-list-packages=.

Iniciant emacs només amb el repositori ELPA si apareix. Potser el
problema va apareixer quan vaig configurar =use-package= per /pinar/
melpa-estable (que no té el paquet)?

Si no hi ha alternativa, clonar-lo dins =~/.emacs.d/site-lisp=:

    https://github.com/emacsmirror/rainbow-mode.git
** DONE =ace-window= i múltiples frames                                 :bug:
   :PROPERTIES:
   :PUB_DATE: [2018-04-01 dg 00:52]
   :REFERER:
   :END:

   - State "DONE"       from "TODO"       [2018-04-01 dg 02:48] \\
     r800: es configura.

Si hi ha varis frames =C-x o= (=ace-window=) demana a quina finestra
saltar, encara que el frame actiu només tingui dos finestres.

Crec recordar que es podia configurar per oferir saltar únicament a
les finestres del frame actiu.

** DONE revisar =C-x b=                                                 :bug:
   :PROPERTIES:
   :PUB_DATE: [2018-03-31 ds 23:22]
   :REFERER: [[help:ido-default-buffer-method]]
   :END:

   - State "DONE"       from "TODO"       [2018-04-01 dg 04:30] \\
     r808: es configura.

Quan treballo amb múltiples frames, =C-x b= pot canviar de frame si el
buffer és visible en ell. Aquest comportament m'ha sobtat i ha
interferit en el que volia fer, treballar en un buffer /a pantalla
completa/.

El valor de =ido-default-buffer-method= determina com canviar el
buffer. =selected-window= sembla que és el que necessito.

** DONE revisar codi elisp vell                                         :bug:
   :PROPERTIES:
   :PUB_DATE: [2018-03-31 ds 01:17]
   :REFERER:
   :END:

   - State "DONE"       from "TODO"       [2018-04-01 dg 05:39] \\
     r809

Dins =./old-cfg/instances/common/init.d= hi ha mòduls amb codi elisp.
Defineix algunes comandes que s'utilitzen el el keybindings i
probablement brossa. Mirar que fer amb ells.

** DONE revisar paquets instal·lats                                    :task:
   :PROPERTIES:
   :PUB_DATE: [2018-04-01 dg 06:05]
   :REFERER: [[file:~/.emacs.d/conf.d/settings.org::*Introducci%C3%B3][Introducció]]
   :END:

   - State "DONE"       from "TODO"       [2018-04-01 dg 15:33] \\
     r810

Paquets /interessants/ que només apareixen a la configuració vella.

Els paquests estan enllaçats a la seva descripció. Perquè els links
funcionin cal haver executat prèviament =M-x package-list-packages=.

- [[elisp:(describe-package 'ansi)][ansi-0.4.1]]: no ho entenc, probablement dependència (PD)
- [[elisp:(describe-package 'cm-mode)][cm-mode-1.6]]: no l'utilitzo, PD
- [[elisp:(describe-package 'commander)][commander-0.7.0]]: parser línia ordres, PD
- [[elisp:(describe-package 'company-go)][company-go-20150303]]
- [[elisp:(describe-package 'embrace)][embrace-0.1.3]]
- [[elisp:(describe-package 'epl)][epl-0.8]]: sanititza =package.el=, PD
- [[elisp:(describe-package 'f)][f-1.18.1]]
- [[elisp:(describe-package 'feature-mode)][feature-mode-0.4]]: mode per editar tests BDD, mai no l'he
  utilitzat (NU)
- figlet
- [[elisp:(describe-package 'flymake)][flymake-0.4.16]]: seguir amb el /builtin/ o passar a =flycheck=
- flymake-go-2013.3.14: melpa (inestable)
- git-rebase-mode-1.0.0: integrat en =magit=
- [[elisp:(describe-package 'go-eldoc)][go-eldoc-0.30]]
- [[elisp:(describe-package 'go-mode)][go-mode-1.5.0]]
- [[elisp:(describe-package 'haml-mode)][haml-mode-3.1.9]]: dependència de =sass-mode=, NU
- [[elisp:(describe-package 'hydra)][hydra-0.13.6]]
- [[elisp:(describe-package 'json-mode)][json-mode-1.7.0]]: emacs inclou un mode =json=, no utilitzo tant
  =json= com per justificar un nou mode i aquest no aporta gran cosa
  directament (integra altres paquets). Sembla abandonat (AB).
- [[elisp:(describe-package 'json-reformat)][json-reformat-0.0.6]]: emacs inclou /pretty printer/ per =json=
- [[elisp:(describe-package 'json-snatcher)][json-snatcher-1.0.0]]: interessant però NU
- [[elisp:(describe-package 'let-alist)][let-alist-1.0.5]]: macro curiosa, actualment builtin (BI)
- [[elisp:(describe-package 'load-relative)][load-relative-1.2]]: interessant per treballar en paquets amb
  múltiples mòduls però sembla una mica abandonat i em preocupa
  hipotecar-me.
- [[elisp:(describe-package 'loc-changes)][loc-changes-1.2]]: interessant, PD
- lorem-ipsum-0.1: melpa (inestable), abandonat, probablement
  millor clonar repo (https://github.com/jschaf/emacs-lorem-ipsum.git)
- [[elisp:(describe-package 'mmm-mode)][mmm-mode-0.5.4]]: PD, potser de vue-mode que NU
- noflet-0.0.15: melpa, macro màgica, PD
- [[elisp:(describe-package 'paradox)][paradox-2.5.1]]: millor interacció amb el gestor de paquets, no ho
  utilitzo tant per justificar-ho.
- [[elisp:(describe-package 'pkg-info)][pkg-info-0.6]]: PD
- [[elisp:(describe-package 'projectile)][projectile-0.14.0]]: no l'utilitzo. Potencial com framework sobre
  el que desenvolupar paquets que treballin sobre /el projecte/. Fa
  temps que es publica una release.
- [[elisp:(describe-package 'seq)][seq-2.20]]: BI
- [[elisp:(describe-package 'spinner)][spinner-1.7.3]]: PD (de paradox?)
- [[elisp:(describe-package 'test-simple)][test-simple-1.2.0]]: framework per tests, AB, mirar alternatives
  millor mantingudes.
- workgroups-0.2.0: AB i NU

** DONE [#A] estudiar =use-package=                             :enhancement:

   - State "DONE"       from "TODO"       [2018-04-01 dg 16:09] \\
     Canvis fets:

     =:diminish= té el seu propi TODO

     El temps d'arranc és ràpid, no vull perdre més temps en aquest punt.
     Metre puga tiraré de =package.el=, dependències.

     Ja s'utilitzen les /clausules/ rellevant excepte per =:bind=, però el
     tema de configurar el teclat encara no el tinc perfilat del tot.
- incorporar =:diminish=

- per paquets instal·lats manualment, aparentment permet especificar
  la ruta.

- messurar l'impacte en el temps d'arranc de =:ensure t=. Si cal,
  definir una variable d'entorn que influeixi en el comportament. En
  la [[http://pages.sachachua.com/.emacs.d/Sacha.html#org0477c97][configuració de Sacha Chua]] he vist que es pot definir un valor
  global per defecte per =:ensure=.

- incorporar =:commands=

:after :bind :bind* :bind-keymap :bind-keymap* :commands :config
:defer :defines :delight :demand :diminish :disabled :ensure
:functions :if :init :interpreter :load-path :mode :no-require :pin
:preface :requires :unless :when

En [[https://www.youtube.com/watch?v=2TSKxxYEbII&t=530][aquest vídeo]] es comenta que es pot aprofitar el =:load-path= per
accelerar la càrrega i eliminar =package-initialize= (i probablement
inutilitzant tot =package.el=). Interpreto que =package-initialize=
carrega almenys els =autoloads=, ralentitzant l'arranc, mentre que
=use-package= + =:load-path= és /lazy/.

Haver de gestionar tots els paquets manualment em tira enrere, per la
gestió de dependències principalment.

- estudiar =package.el= per entendre millor que fa
  =package-initialize=

- mirar si existeix cap estensió de =use-package= que permeti fer
  /checkouts/ de repositòris VCS, diguem en =~/.emacs.d/site-lisp~,
  configuri el path etc.
** CANC revisar =uniquify=                                      :enhancement:
   :PROPERTIES:
   :PUB_DATE: [2018-03-30 dv 03:14]
   :REFERER: [[file:settings.org::*=uniquify=][=uniquify=]]
   :END:

   - State "CANC"       from "TODO"       [2018-04-01 dg 16:56] \\
     He confirmat que el funcionament és el mateix en la configuració
     original per tant serà un problema de percepció.

El funcionament d'=uniquify= no m'agrada: al obrir =/tmp/foo.py= i
=~/tmp/foo.py= els noms assignats als buffers són =foo.py\= i
=foo.py\aroda= respectivament, em resulten una mica confusos.

La variable =uniquify-strip-common-suffix= podria ajudar.

** CANC Afegir keybinding                                              :idea:
   :PROPERTIES:
   :PUB_DATE: [2018-03-30 dv 10:42]
   :REFERER: [[file:settings.org::*=paredit=][=paredit=]]
   :END:

   - State "CANC"       from "TODO"       [2018-04-01 dg 16:58] \\
     =C-x k he RET= és suficientment àgil, no cal estressar-se, i
     conneixent-me definiré la comanda i mai la utilitzaré.

     En relació a tancar varis buffers, =ibuffer= ofereix prestacions
     interessants.

És habitual obrir un buffer =*Help*=, consultar i tancar. Tancar-lo
hauria de ser àgil (ara utilitzo =C-x k help RET=).

#+begin_src emacs-lisp :tangle no
  (defun arv/close-help-buffer-maybe ()
    (interactive)
    (let ((buffer (get-buffer "*Help*")))
      (when buffer
        (kill-buffer buffer))))
#+end_src

Assignar-ho a una tecla fàcil de recordar i utilitzar.

En la mateixa línia, potser la idea es podria generalitzar per tancar
certs buffers (una llista configurable, una expressió regular ...).

** DONE Ajustar face de =ace-jump-mode=                                 :bug:
   :PROPERTIES:
   :PUB_DATE: [2018-03-31 ds 22:07]
   :REFERER: [[file:~/.emacs.d/conf.d/notes.org::*comparar%20temps%20de%20c%C3%A0rrega][comparar temps de càrrega]]
   :END:

   - State "DONE"       from "TODO"       [2018-04-01 dg 18:11] \\
     r813

En una terminal, la lletra que permet triar la finestra no és gaire
visible.

** DONE [#A] netejar keybinding                                         :bug:

   - State "DONE"       from "TODO"       [2018-04-01 dg 19:45] \\
     r814

Al migrar la configuració he eliminat alguna funcionalitat i algunes
tecles fallaran amb =Symbol's function definition is void=.

Mirar lo complicat que seria escanejar els keymaps buscant tecles per
le que =fboundp= avalua a =nil=.

** DONE revisar funció =grin=                                   :enhancement:
   :PROPERTIES:
   :PUB_DATE: [2018-03-30 dv 00:53]
   :REFERER: [[file:settings.org::*=grin=][=grin=]]
   :END:

   - State "DONE"       from "TODO"       [2018-04-01 dg 21:00] \\
     r815.

Preferiria una implementació amb una clausura, en la línia del codi
següent, però no acabo de tindre clar el tema del /lexical binding/ en
emacs lisp.

#+begin_src emacs-lisp :tangle no
  (use-package grin
    :ensure t
    :config
    (let ((real-grin (symbol-function 'grin)))
      (defun grin ()
        (interactive)
        (let ((default-directory (ido-read-directory-name "Directory: " nil nil t)))
          (funcall real-grin)))))
#+end_src

** DONE integrar =ox-twbs=                                      :enhancement:
   :PROPERTIES:
   :PUB_DATE: [2018-03-31 ds 01:21]
   :REFERER: [[file:~/.emacs.d/conf.d/notes.org::*error%20en%20HTML][error en HTML]]
   :END:

   - State "DONE"       from "TODO"       [2018-04-01 dg 22:16] \\
     r816

Mirar com afegir =ox-twbs= a la pantalla d'exportació (=C-c C-e=),
preferiblement en el grup HTML.

** DONE millorar =figlet=                                              :idea:
   :PROPERTIES:
   :PUB_DATE: [2018-04-01 dg 19:39]
   :REFERER:
   :END:

   - State "DONE"       from "TODO"       [2018-04-02 dl 01:08] \\
     r817

El paquet =figlet= únicament genera text dins un comentari. Afegir
comanda per genera text sense comentari.

Revisar el codi, crec que havia alguna cosa més que volia canviar.
** DONE repensar comandes sh                                            :bug:
   :PROPERTIES:
   :PUB_DATE: [2018-04-01 dg 15:05]
   :REFERER: [[file:~/.emacs.d/conf.d/settings.org::*helpers%20sh][helpers sh]]
   :END:

   - State "DONE"       from "TODO"       [2018-04-02 dl 19:03] \\
     r826

Al incorporar el paquet =emacs-lorem-ipsum= he detectat que no es pot
instal·lar executant el bloc de codi sh des del document.

El problema és que =elisp_clone_git= i =elisp_compile_package= son
funcions i no estan definides en el context en que s'avalua el bloc de
codi.

Convertir-les en scripts, dins el directori =scripts= sembla que
resoldria el problema. Caldria ajustar els blocs existents, prefixant
les comandes amb =./scripts/xxxx= i extreure tambés les variable din
l'arxiu =./scripts/config= (que seria /sourced/ pels scripts).
