;;; =====================================================================
;;; Fichero de configuracion de emacs
;;; Personalizacion del sgml-mode y relacionados
;;;
;;; $Id$
;;; $Log:$
;;;

;;; ======================================================================
;;;
;;;                               sgml-mode
;;;

;; aquest require es necessari, pero pel moment no utilitzo aquest
;; modul ni tinc instalat psgml. Per evitar el molest error de
;; compilacio el comento

;;(require 'psgml)

;(autoload 'sgml-read-element-name "psgml.elc")
;(autoload 'sgml-charent-to-dispchar-alist "psgml.elc")
;(autoload 'sgml-with-parser-syntax "psgml.elc")

; ;;; Determina el caracter electrico de <. Para que pueda funcionar es
; ;;; necesario haber analizado el DTD correspondiente al documentos que
; ;;; se esta editando.
; (defvar sgml-electric-lt t "*Si distinto de nil activa el caracter electrico de <.")
; (make-variable-buffer-local 'sgml-electric-lt)

; ;;; Dependiedo del valor de sgml-electric-lt inserta un caracter < o
; ;;; pide un tag y lo inserta. Comprobando si se ha definido la funcion
; ;;; sgml-read-element-name sabemos si se ha analizado el DTD.
; (defun sgml-insert-electric-lt ()
;   "Al pulsar < se solicita elemento a insertar."
;   (interactive)
;   (if (or (null sgml-electric-lt)
; 	  (not (fboundp 'sgml-read-element-name)))
;       (insert "<")
;     (sgml-insert-element (sgml-read-element-name "Elemento: "))))

; (defun sgml-insert-electric-amp ()
;   "Al pulsar & se solitica un caracter y se inserta la entidad correspondiente."
;   (interactive)
;   (let ((charent-to-char (sgml-charent-to-dispchar-alist))
;         charent replacement)
;     (save-excursion
;       (goto-char (point-min))
;       (sgml-with-parser-syntax
;        (while (re-search-forward "&\\(\\w\\(\\w\\|\\s_\\)*\\);?" nil t)
;          (setq charent (buffer-substring (match-beginning 1) (match-end 1)))
;          (if (setq replacement (cdr (assoc charent charent-to-char)))
;              (replace-match replacement t t)))))))

(add-hook 'sgml-mode-hook
	  '(lambda ()
;	     (local-set-key ?< 'sgml-insert-electric-lt)
	     (set-variable 'sgml-indent-data t)
	     (set-variable 'sgml-set-face t)
	     (set-variable 'sgml-balanced-tag-edit t)
	     (set-variable 'sgml-auto-insert-required-elements t)
	     (set-variable 'sgml-display-char-list-filename "/usr/lib/sgml/entities/ISOlat1")
;	     (set-variable 'sgml-auto-activate-dtd t)
 	     (set-variable 'sgml-markup-faces
 			   '((start-tag . font-lock-keyword-face)
 			    (end-tag . secondary-selection)
 			    (comment . font-lock-comment-face)
 			    (pi . bold)
 			    (sgml . bold)
 			    (doctype . font-lock-emphasized-face)
 			    (entity . custom-invalid-face)
 			    (shortref . font-lock-reference-face)))
	     (setq sgml-custom-dtd
		   (append sgml-custom-dtd
			   '(("HTML+" "<!doctype htmlplus system 'htmlplus.dtd'")
			     ("HTML v4.0" "<!doctype html PUBLIC '-//W3C//DTD HTML 4.01//EN' []>")
			     ("DOCBOOK v3.0" "<!doctype book PUBLIC '-//Davenport//DTD DocBook V3.0//EN' []>")
			     ("DOCBOOK v3.1" "<!doctype book PUBLIC '-//OASIS//DTD DocBook V3.1//EN' []>")
			     ("LINUXDOC" "<!doctype linuxdoc system>")
			     )))
	     (turn-on-font-lock)
))

