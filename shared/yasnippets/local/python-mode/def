# -*- mode: snippet -*-
# -*- coding: utf-8 -*-
# name: define function
# contributor: Alexis Roda
# key: def
# --
def ${1:name}($2):
    """$3

    ${2:$
    (let* ((indent (concat "\n" (make-string (current-column) 32)))
           (string-trim
            (lambda (x)
              (replace-regexp-in-string "[[:blank:]]*$" ""
                                        (replace-regexp-in-string "^[[:blank:]]*" "" x))))
           (format-param
            (lambda (x) (unless (string= x "")
                          (concat ":param " x ":"))))
           (args
            (mapcar format-param
                    (mapcar string-trim
                            (mapcar '(lambda (x) (car (split-string x "=")))
                                    (split-string text ","))))))
      (if (null args)
          ""
        (mapconcat 'identity args indent)))
    }

    ${4::raises: $5}
    ${6::returns: $7}
    ${8::rtype: $9}
    """
    $0
